(autoload 'g-app-mode                           "g-app" "" t)
(autoload 'g-app-get-entry                      "g-app" "" nil)
(autoload 'g-app-send-buffer                    "g-app" "" nil)
(autoload 'g-app-post-entry                     "g-app" "" t)
(autoload 'g-app-put-entry                      "g-app" "" t)
(autoload 'g-app-delete-entry                   "g-app" "" nil)
(autoload 'g-app-publish                        "g-app" "" t)
(autoload 'g-app-edit-entry                     "g-app" "" nil)
(autoload 'g-app-view                           "g-app" "" t)
(autoload 'g-auth-url                           "g-auth" "" nil);;defsubst
(autoload 'g-cookie                             "g-auth" "" nil);;defsubst
(autoload 'g-authorization                      "g-auth" "" nil);;defsubst
(autoload 'g-auth-expired-p                     "g-auth" "" nil);;defsubst
(autoload 'g-authenticate                       "g-auth" "" nil)
(autoload 'g-auth-ensure-token                  "g-auth" "" nil)
(autoload 'g-autogen-generate-autoloads         "g-autogen" "" nil)
(autoload 'g-autogen-custom-make-dependencies   "g-autogen" "" nil)
(autoload 'g-buffer-bytes                       "g-utils" "" nil);;defsubst
(autoload 'g-curl-debug                         "g-utils" "" nil);;defsubst
(autoload 'g-url-encode                         "g-utils" "" nil);;defsubst
(autoload 'g-xsl-transform-region               "g-utils" "" nil);;defsubst
(autoload 'g-html-unescape-region               "g-utils" "" nil);;defsubst
(autoload 'g-html-escape-region                 "g-utils" "" nil);;defsubst
(autoload 'g-json-get                           "g-utils" "" nil);;defsubst
(autoload 'g-json-lookup                        "g-utils" "" nil);;defsubst
(autoload 'g-using-scratch                      "g-utils" "" nil 'macro)
(autoload 'g-get-result                         "g-utils" "" nil);;defsubst
(autoload 'g-json-get-result                    "g-utils" "" nil);;defsubst
(autoload 'g-display-result                     "g-utils" "" nil);;defsubst
(autoload 'g-display-xml-string                 "g-utils" "" nil);;defsubst
(autoload 'g-display-xml-buffer                 "g-utils" "" nil);;defsubst
(autoload 'g-http-headers                       "g-utils" "" nil);;defsubst
(autoload 'g-http-body                          "g-utils" "" nil);;defsubst
(autoload 'g-http-header                        "g-utils" "" nil);;defsubst
(autoload 'g-get-user-input                     "g-utils" "" nil)
(autoload 'gblogger-p                           "gblogger" "" nil);;defsubst
(autoload 'make-gblogger-auth                   "gblogger" "" nil);;defsubst
(autoload 'gblogger-blog                        "gblogger" "" t)
(autoload 'gblogger-atom-display                "gblogger" "" t)
(autoload 'gblogger-get-entry                   "gblogger" "" nil)
(autoload 'gblogger-edit-entry                  "gblogger" "" t)
(autoload 'gblogger-new-entry                   "gblogger" "" t)
(autoload 'gblogger-delete-entry                "gblogger" "" t)
(autoload 'gblogger-add-label                   "gblogger" "" t)
(autoload 'gblogger-sign-out                    "gblogger" "" t)
(autoload 'gblogger-sign-in                     "gblogger" "" t)
(autoload 'gcal-p                               "gcal" "" nil);;defsubst
(autoload 'make-gcal-auth                       "gcal" "" nil);;defsubst
(autoload 'gcal-authenticate                    "gcal" "" nil)
(autoload 'gcal-attendee-list-as-xml            "gcal" "" nil)
(autoload 'gcal-event-as-xml                    "gcal" "" nil)
(autoload 'gcal-event-transparency-value        "gcal" "" nil);;defsubst
(autoload 'gcal-event-status-value              "gcal" "" nil);;defsubst
(autoload 'gcal-read-transparency               "gcal" "" nil);;defsubst
(autoload 'gcal-read-status                     "gcal" "" nil);;defsubst
(autoload 'gcal-format-time-string              "gcal" "" nil);;defsubst
(autoload 'gcal-read-time                       "gcal" "" nil);;defsubst
(autoload 'gcal-read-calendar-date              "gcal" "" nil)
(autoload 'gcal-read-calendar-time              "gcal" "" nil)
(autoload 'gcal-read-who                        "gcal" "" nil);;defsubst
(autoload 'gcal-read-event                      "gcal" "" t)
(autoload 'gcal-private-feed-url                "gcal" "" nil);;defsubst
(autoload 'gcal-feed-url                        "gcal" "" nil);;defsubst
(autoload 'gcal-post-event                      "gcal" "" nil);;defsubst
(autoload 'gcal-post-quickadd                   "gcal" "" nil);;defsubst
(autoload 'gcal-event-as-diary-entry            "gcal" "" nil)
(autoload 'gcal-add-event                       "gcal" "" t)
(autoload 'gcal-quickadd-event                  "gcal" "" t)
(autoload 'gcal-delete-event                    "gcal" "" t)
(autoload 'gcal-accept-event                    "gcal" "" t)
(autoload 'gcal-reject-event                    "gcal" "" t)
(autoload 'gcal-calendar-get-date               "gcal" "" nil)
(autoload 'gcal-calendar-agenda                 "gcal" "" t)
(autoload 'gcal-view                            "gcal" "" t)
(autoload 'gcal-show-event                      "gcal" "" t)
(autoload 'gcal-feeds-url                       "gcal" "" nil);;defsubst
(autoload 'gcal-calendars                       "gcal" "" t)
(autoload 'gcal-my-calendars                    "gcal" "" t)
(autoload 'gcal-emacs-calendar-setup            "gcal" "" nil)
(autoload 'gcal-sign-out                        "gcal" "" t)
(autoload 'gcal-sign-in                         "gcal" "" t)
(autoload 'gcontacts-p                          "gcontacts" "" nil);;defsubst
(autoload 'gcontacts-initialize                 "gcontacts" "" t)
(autoload 'gcontacts-create                     "gcontacts" "" t)
(autoload 'gdocs-p                              "gdocs" "" nil);;defsubst
(autoload 'make-gdocs-auth                      "gdocs" "" nil);;defsubst
(autoload 'gdocs-authenticate                   "gdocs" "" nil)
(autoload 'gdocs-feeds-url                      "gdocs" "" nil);;defsubst
(autoload 'gdocs-doclist                        "gdocs" "" t)
(autoload 'gdocs-publish-from-org               "gdocs" "" t)
(autoload 'gdocs-download-url                   "gdocs" "" nil);;defsubst
(autoload 'gdocs-fetch-document                 "gdocs" "" t)
(autoload 'gdocs-fetch-document-text            "gdocs" "" t)
(autoload 'gdocs-fetch-document-html            "gdocs" "" t)
(autoload 'gdocs-update-url                     "gdocs" "" nil);;defsubst
(autoload 'gdocs-blind-update                   "gdocs" "" t)
(autoload 'gdocs-update-from-text               "gdocs" "" t)
(autoload 'gdocs-update-from-html               "gdocs" "" t)
(autoload 'gdocs-publish                        "gdocs" "" t)
(autoload 'gdocs-publish-from-html              "gdocs" "" t)
(autoload 'gdocs-publish-from-text              "gdocs" "" t)
(autoload 'gdocs-add-collaborator               "gdocs" "" t)
(autoload 'gdocs-delete-item                    "gdocs" "" t)
(autoload 'gdocs-view-item                      "gdocs" "" t)
(autoload 'gdocs-sign-out                       "gdocs" "" t)
(autoload 'gdocs-sign-in                        "gdocs" "" t)
(autoload 'gfeeds-feed                          "gfeeds" "" nil);;defsubst
(autoload 'gfeeds-lookup                        "gfeeds" "" nil);;defsubst
(autoload 'gfeeds-find                          "gfeeds" "" nil);;defsubst
(autoload 'gfeeds-titles                        "gfeeds" "" nil)
(autoload 'gfeeds-html                          "gfeeds" "" nil)
(autoload 'gfeeds-view                          "gfeeds" "" t)
(autoload 'gfeeds-lookup-and-view               "gfeeds" "" t)
(autoload 'gfinance-p                           "gfinance" "" nil);;defsubst
(autoload 'make-gfinance-auth                   "gfinance" "" nil);;defsubst
(autoload 'gfinance-authenticate                "gfinance" "" nil)
(autoload 'gfinance-feeds-url                   "gfinance" "" nil);;defsubst
(autoload 'gfinance-portfolios                  "gfinance" "" t)
(autoload 'gfinance-display-feed                "gfinance" "" t)
(autoload 'gfinance-sign-out                    "gfinance" "" t)
(autoload 'gfinance-sign-in                     "gfinance" "" t)
(autoload 'ghealth-p                            "ghealth" "" nil);;defsubst
(autoload 'make-ghealth-auth                    "ghealth" "" nil);;defsubst
(autoload 'ghealth-authenticate                 "ghealth" "" nil)
(autoload 'ghealth-profile-list-url             "ghealth" "" nil);;defsubst
(autoload 'ghealth-profile-list                 "ghealth" "" t)
(autoload 'ghealth-sign-out                     "ghealth" "" t)
(autoload 'ghealth-sign-in                      "ghealth" "" t)
(autoload 'gnotebook-p                          "gnotebook" "" nil);;defsubst
(autoload 'make-gnotebook-auth                  "gnotebook" "" nil);;defsubst
(autoload 'gnotebook-post-authenticate-function "gnotebook" "" nil)
(autoload 'gnotebook-authenticate               "gnotebook" "" nil)
(autoload 'gnotebook-list-url                   "gnotebook" "" nil);;defsubst
(autoload 'gnotebook-list                       "gnotebook" "" t)
(autoload 'gphoto-p                             "gphoto" "" nil);;defsubst
(autoload 'make-gphoto-auth                     "gphoto" "" nil);;defsubst
(autoload 'gphoto-authenticate                  "gphoto" "" nil)
(autoload 'gphoto-read-feed-kind                "gphoto" "" nil);;defsubst
(autoload 'gphoto-album-or-tag-url              "gphoto" "" nil);;defsubst
(autoload 'gphoto-feeds                         "gphoto" "" t)
(autoload 'gphoto-albums                        "gphoto" "" t)
(autoload 'gphoto-tags                          "gphoto" "" t)
(autoload 'gphoto-view                          "gphoto" "" t)
(autoload 'gphoto-download                      "gphoto" "" t)
(autoload 'gphoto-community-search              "gphoto" "" t)
(autoload 'gphoto-recent                        "gphoto" "" t)
(autoload 'gphoto-user-search                   "gphoto" "" t)
(autoload 'gphoto-user-tagsearch                "gphoto" "" t)
(autoload 'gphoto-read-album                    "gphoto" "" nil)
(autoload 'gphoto-album-as-xml                  "gphoto" "" nil)
(autoload 'gphoto-album-create-url              "gphoto" "" nil);;defsubst
(autoload 'gphoto-post-album                    "gphoto" "" nil);;defsubst
(autoload 'gphoto-album-create                  "gphoto" "" t)
(autoload 'gphoto-read-photo                    "gphoto" "" nil)
(autoload 'gphoto-photo-as-xml                  "gphoto" "" nil)
(autoload 'gphoto-async-post-photo              "gphoto" "" nil);;defsubst
(autoload 'gphoto-photo-add                     "gphoto" "" t)
(autoload 'gphoto-directory-add-photos          "gphoto" "" t)
(autoload 'gphoto-tag-as-xml                    "gphoto" "" nil);;defsubst
(autoload 'gphoto-comment-as-xml                "gphoto" "" nil);;defsubst
(autoload 'gphoto-post-update                   "gphoto" "" nil);;defsubst
(autoload 'gphoto-comment-or-tag                "gphoto" "" t)
(autoload 'gphoto-sign-out                      "gphoto" "" t)
(autoload 'gphoto-sign-in                       "gphoto" "" t)
(autoload 'gphoto-delete-item                   "gphoto" "" t)
(autoload 'gphoto-edit-entry                    "gphoto" "" t)
(autoload 'greader-p                            "greader" "" nil);;defsubst
(autoload 'make-greader-auth                    "greader" "" nil);;defsubst
(autoload 'greader-get-edit-token               "greader" "" nil)
(autoload 'greader-feed-url                     "greader" "" nil);;defsubst
(autoload 'greader-state-url                    "greader" "" nil);;defsubst
(autoload 'greader-label-url                    "greader" "" nil);;defsubst
(autoload 'greader-edit-url                     "greader" "" nil);;defsubst
(autoload 'greader-read-state                   "greader" "" nil)
(autoload 'greader-reading-list                 "greader" "" t)
(autoload 'greader-read-preference              "greader" "" nil)
(autoload 'greader-preferences                  "greader" "" t)
(autoload 'greader-id-to-url                    "greader" "" nil);;defsubst
(autoload 'greader-view-json-subscriptions      "greader" "" nil)
(autoload 'greader-view-json-results            "greader" "" nil)
(autoload 'greader-unread-count                 "greader" "" nil)
(autoload 'greader-get-unread-count-by-id       "greader" "" nil);;defsubst
(autoload 'greader-get-timestamp-by-id          "greader" "" nil);;defsubst
(autoload 'greader-subscriptions-list           "greader" "" nil);;defsubst
(autoload 'greader-subscriptions                "greader" "" nil)
(autoload 'greader-feed-list                    "greader" "" t)
(autoload 'greader-opml                         "greader" "" t)
(autoload 'greader-view-json-tags               "greader" "" nil)
(autoload 'greader-tag-list                     "greader" "" t)
(autoload 'greader-tagged-reading-list          "greader" "" t)
(autoload 'greader-subscribe-feed               "greader" "" t)
(autoload 'greader-unsubscribe-feed             "greader" "" t)
(autoload 'greader-title-feed                   "greader" "" t)
(autoload 'greader-tag-feed                     "greader" "" t)
(autoload 'greader-untag-feed                   "greader" "" t)
(autoload 'greader-build-edit-command           "greader" "" nil)
(autoload 'greader-update-subscription          "greader" "" nil)
(autoload 'greader-read-item-url                "greader" "" nil);;defsubst
(autoload 'greader-add-label                    "greader" "" t)
(autoload 'greader-star                         "greader" "" t)
(autoload 'greader-find-feeds                   "greader" "" t)
(autoload 'greader-search-results               "greader" "" nil)
(autoload 'greader-search                       "greader" "" t)
(autoload 'greader-sign-out                     "greader" "" t)
(autoload 'greader-sign-in                      "greader" "" t)
(autoload 'greader-re-authenticate              "greader" "" t)
(autoload 'gsheet-p                             "gsheet" "" nil);;defsubst
(autoload 'make-gsheet-auth                     "gsheet" "" nil);;defsubst
(autoload 'gsheet-authenticate                  "gsheet" "" nil)
(autoload 'gsheet-fetch                         "gsheet" "" t)
(autoload 'gsheet-feeds-url                     "gsheet" "" nil);;defsubst
(autoload 'gsheet-sheets                        "gsheet" "" t)
(autoload 'gsheet-sign-out                      "gsheet" "" t)
(autoload 'gsheet-sign-in                       "gsheet" "" t)
(autoload 'gskeleton-p                          "gskeleton" "" nil);;defsubst
(autoload 'make-gskeleton-auth                  "gskeleton" "" nil);;defsubst
(autoload 'gskeleton-authenticate               "gskeleton" "" nil)
(autoload 'gskeleton-feeds-url                  "gskeleton" "" nil);;defsubst
(autoload 'gskeleton-skels                      "gskeleton" "" t)
(autoload 'gskeleton-sign-out                   "gskeleton" "" t)
(autoload 'gskeleton-sign-in                    "gskeleton" "" t)
(autoload 'gtube-p                              "gtube" "" nil);;defsubst
(autoload 'gtube-rest-resource                  "gtube" "" nil);;defsubst
(autoload 'gtube-display                        "gtube" "" nil);;defsubst
(autoload 'gtube-user-profile                   "gtube" "" t)
(autoload 'gtube-user-favorites                 "gtube" "" t)
(autoload 'gtube-user-friends                   "gtube" "" t)
(autoload 'gtube-video-details                  "gtube" "" t)
(autoload 'gtube-video-by-tag                   "gtube" "" t)
(autoload 'gtube-video-by-category-and-tag      "gtube" "" t)
(autoload 'gtube-video-playlist                 "gtube" "" t)
(autoload 'gtube-video-popular                  "gtube" "" t)
(autoload 'gtube-video-by-user                  "gtube" "" t)
(autoload 'gtube-video-featured                 "gtube" "" t)
(autoload 'make-gtube-auth                      "gtube" "" nil);;defsubst
(autoload 'gtube-authenticate                   "gtube" "" nil)
(autoload 'gweb-suggest                         "gweb" "" nil);;defsubst
(autoload 'gweb-suggest-completer               "gweb" "" nil)
(autoload 'gweb-news-suggest-completer          "gweb" "" nil)
(autoload 'gweb-google-autocomplete             "gweb" "" nil);;defsubst
(autoload 'gweb-news-autocomplete               "gweb" "" nil);;defsubst
(autoload 'gweb-results                         "gweb" "" nil);;defsubst
(autoload 'gweb-web-results                     "gweb" "" nil);;defsubst
(autoload 'gweb-news-results                    "gweb" "" nil);;defsubst
(autoload 'gweb-news-html                       "gweb" "" nil)
(autoload 'gweb-news-view                       "gweb" "" t)
(autoload 'gweb-google-at-point                 "gweb" "" t)
(autoload 'gweb-maps-geocoder-url               "gweb" "" nil);;defsubst
(autoload 'gweb-maps-reverse-geocoder-url       "gweb" "" nil);;defsubst
(autoload 'gweb-maps-geocode                    "gweb" "" nil)
(autoload 'gweb-maps-reverse-geocode            "gweb" "" nil)
(autoload 'gwis-get-search-uri                  "gwis" "" nil);;defsubst
(autoload 'gwis-get-query-string                "gwis" "" nil);;defsubst
(autoload 'gwis-mode                            "gwis" "" t)
(autoload 'gwis-isearch                         "gwis" "" t)
(autoload 'gwis-select-searcher                 "gwis" "" t)
(autoload 'gwis                                 "gwis" "" t)
(autoload 'gwis-setup-keys                      "gwis" "" nil)
(autoload 'batch-indent-files                   "indent-files" "" nil)
(autoload 'org2gblogger                         "org2blogger" "" t)
(provide 'g-client-epackage-autoloads)
